(self.webpackChunk_react_mixing_docs=self.webpackChunk_react_mixing_docs||[]).push([[599],{80635:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=a(7560),r=a(98283),l=(a(2784),a(30876)),i=["components"],o={sidebar_position:2,sidebar_label:"Props"},p={unversionedId:"api/Props",id:"api/Props",isDocsHomePage:!1,title:"Props",description:"Overview",source:"@site/docs/api/Props.mdx",sourceDirName:"api",slug:"/api/Props",permalink:"/react-mixing/docs/api/Props",editUrl:"https://github.com/tseijp/react-mixing/edit/master/examples/docs/api/Props.mdx",version:"current",sidebar_label:"Props",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Props"},sidebar:"tutorialSidebar",previous:{title:"Mixing",permalink:"/react-mixing/docs/api/Mixing"},next:{title:"Config",permalink:"/react-mixing/docs/api/Config"}},d=[{value:"Overview",id:"overview",children:[]},{value:"Loop Prop",id:"loop-prop",children:[]},{value:"The loop function",id:"the-loop-function",children:[]},{value:"The loop object",id:"the-loop-object",children:[]},{value:"Inherited props",id:"inherited-props",children:[]},{value:"Cancel Prop",id:"cancel-prop",children:[]},{value:"Delayed updates",id:"delayed-updates",children:[]},{value:"Events",id:"events",children:[]},{value:"Declarative updates",id:"declarative-updates",children:[]},{value:"Imperative updates",id:"imperative-updates",children:[]},{value:"Compatible props",id:"compatible-props",children:[]}],s={toc:d};function m(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"overview"},"Overview"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"useMixing({ from: { ... }, to: { ... }, delay: 100, onRest: () => ... })\n")),(0,l.kt)("p",null,"All primitives inherit the following properties\n(though some of them may bring their own additionally):"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"from"),(0,l.kt)("td",{parentName:"tr",align:"left"},"obj"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Base values, optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"to"),(0,l.kt)("td",{parentName:"tr",align:"left"},"obj/fn/array(obj)"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Animates to ...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"loop"),(0,l.kt)("td",{parentName:"tr",align:"left"},"obj/fn/bool"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"delay"),(0,l.kt)("td",{parentName:"tr",align:"left"},"number/fn"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"immediate"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool/fn"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"config"),(0,l.kt)("td",{parentName:"tr",align:"left"},"obj/fn"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Mixing config")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"events"),(0,l.kt)("td",{parentName:"tr",align:"left"},"fn"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"reset"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"reverse"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"cancel"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool/string/fn"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"pause"),(0,l.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h1",{id:"advanced-props"},"Advanced Props"),(0,l.kt)("h3",{id:"loop-prop"},"Loop Prop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const styles = useMixing({\n  loop: true,\n  from: { rotateZ: 0 },\n  to: { rotateZ: 180 },\n})\n\nrender (\n  <animated.div\n    style={{\n      width: 80,\n      height: 80,\n      backgroundColor: '#46e891',\n      borderRadius: 16,\n      ...styles,\n    }}\n  />\n)\n")),(0,l.kt)("h3",{id:"the-loop-function"},"The loop function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const n = useRef(0)\nconst styles = useMixing({\n  loop: () => 3 > n.current++,\n  from: { x: 0 },\n  to: { x: 100 },\n})\n\nrender (\n  <animated.div\n    style={{\n      width: 80,\n      height: 80,\n      backgroundColor: '#46e891',\n      borderRadius: 16,\n      ...styles,\n    }}\n  />\n)\n")),(0,l.kt)("h3",{id:"the-loop-object"},"The loop object"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const styles = useMixing({\n  loop: { reverse: true },\n  from: { x: 0 },\n  to: { x: 100 },\n})\n\nrender (\n  <animated.div\n    style={{\n      width: 80,\n      height: 80,\n      backgroundColor: '#46e891',\n      borderRadius: 16,\n      ...styles,\n    }}\n  />\n)\n")),(0,l.kt)("h3",{id:"inherited-props"},"Inherited props"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const n = useRef(0)\nconst styles = useMixing({\n  from: { x: 0 },\n  config: { duration: 1000 },\n  loop: {\n    x: 100,\n  },\n})\n\nrender (\n  <animated.div\n    style={{\n      width: 80,\n      height: 80,\n      backgroundColor: '#46e891',\n      borderRadius: 16,\n      ...styles,\n    }}\n  />\n)\n")),(0,l.kt)("h3",{id:"cancel-prop"},"Cancel Prop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"useMixing({\n  cancel: true,\n  from: { x: 0 },\n  to: { x: 100 },\n})\n")),(0,l.kt)("h3",{id:"delayed-updates"},"Delayed updates"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const [style, animate] = useMixing(() => ({ x: 0 }))\n\nconst onClick = () => {\n  animate({ x: 100, delay: 500 })\n  animate({ cancel: true })\n}\n")),(0,l.kt)("h3",{id:"events"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Event name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,l.kt)("th",{parentName:"tr",align:"left"}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onStart"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a mixing or key is about to be animated"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onChange"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Frame by frame callback"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onRest"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a mixing or key comes to a stand-still"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onPause"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a mixing or key is paused"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onResume"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a mixing or key is resumed"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onDelayEnd"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a mixing or key has finished being delayed"),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onProps"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a mixing or key's props have been updated"),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"useMixing({\n  from: { x: 0, y: 0 },\n  onRest: {\n    x: () => console.log('x.onRest'),\n    y: () => console.log('y.onRest'),\n  },\n})\n")),(0,l.kt)("h3",{id:"declarative-updates"},"Declarative updates"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"useMixing({\n  to: async animate => { ... },\n  onRest: () => { ... }\n})\n")),(0,l.kt)("h3",{id:"imperative-updates"},"Imperative updates"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"useMixing({\n  from: { x: 0 },\n  to: async animate => {\n    await animate({\n      to: [{ x: 100 }, { x: 0 }],\n      config: { tension: 100 },\n    })\n  },\n})\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const ref = useMixingRef()\nconst [{ x }, api] = useMixing(() => ({\n  x: 0,\n  onRest: () => { ... },\n  ref,\n}))\n\nuseEffect(async () => {\n  await api.start({ x: 0 })\n  await ref.current.start({ x: 100 })\n}, [])\n")),(0,l.kt)("h3",{id:"compatible-props"},"Compatible props"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const { x } = useMixing({\n  x: 0,\n  default: { immediate: true },\n})\nuseEffect(() => void x.start(100))\n")))}m.isMDXComponent=!0}}]);