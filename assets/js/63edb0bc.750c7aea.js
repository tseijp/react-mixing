(self.webpackChunk_react_mixing_docs=self.webpackChunk_react_mixing_docs||[]).push([[662],{38511:function(e,n,i){"use strict";i.r(n),i.d(n,{frontMatter:function(){return r},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var t=i(7560),a=i(98283),s=(i(2784),i(30876)),o=["components"],r={sidebar_position:0,sidebar_label:"useMixing"},c={unversionedId:"hook/useMixing",id:"hook/useMixing",isDocsHomePage:!1,title:"useMixing",description:"Overview",source:"@site/docs/hook/useMixing.mdx",sourceDirName:"hook",slug:"/hook/useMixing",permalink:"/react-mixing/docs/hook/useMixing",editUrl:"https://github.com/tseijp/react-mixing/edit/master/examples/docs/hook/useMixing.mdx",version:"current",sidebar_label:"useMixing",sidebarPosition:0,frontMatter:{sidebar_position:0,sidebar_label:"useMixing"},sidebar:"tutorialSidebar",previous:{title:"Mixing Value",permalink:"/react-mixing/docs/core/MixingValue"},next:{title:"Synthed Node",permalink:"/react-mixing/docs/node/SynthedNode"}},l=[{value:"Overview",id:"overview",children:[]},{value:"Async chains/scripts",id:"async-chainsscripts",children:[]}],d={toc:l};function u(e){var n=e.components,i=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"overview"},"Overview"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useMixing, animated } from 'react-mixing'\n\nconst [synth, api] = useMixing(() => ({ value: 1 }))\n\napi.start({ opacity: toggle ? 1 : 0 })\napi.stop()\n\nrender (\n  <animated.div style={synth}>\n    i will fade\n  </animated.div>\n)\n")),(0,s.kt)("h3",{id:"async-chainsscripts"},"Async chains/scripts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"const styles = useMixing({\n  to: async (next, cancel) => {\n    await next({ opacity: 1, color: '#ffaaee' })\n    await next({ opacity: 0, color: 'rgb(14,26,19)' })\n  },\n  from: { opacity: 0, color: 'red' },\n})\nrender (\n  <animated.div style={styles}>\n    I will fade in and out\n  </animated.div>\n)\n")),(0,s.kt)("p",null,"And this is how you create a chain"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"const styles = useMixing({\n  loop: true,\n  to: [\n    { opacity: 1, color: '#ffaaee' },\n    { opacity: 0, color: 'rgb(14,26,19)' },\n  ],\n  from: { opacity: 0, color: 'red' },\n})\n\nrender (\n  <animated.div style={styles}>\n    I will fade in and out\n  </animated.div>\n)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"useMixing({\n  to: useCallback(async next => { ... }, []),\n})\n")),(0,s.kt)("p",null,"Another solution is to pass a props function."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"useMixing(() => ({\n  to: async next => { ... },\n}))\n")))}u.isMDXComponent=!0}}]);