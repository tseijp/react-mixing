(self.webpackChunk_react_mixing_docs=self.webpackChunk_react_mixing_docs||[]).push([[161],{78819:function(n,e,i){"use strict";i.r(e),i.d(e,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var t=i(7560),a=i(98283),r=(i(2784),i(30876)),o=["components"],s={sidebar_position:1,sidebar_label:"Mixing"},c={unversionedId:"api/Mixing",id:"api/Mixing",isDocsHomePage:!1,title:"Mixing",description:"Overview",source:"@site/docs/api/Mixing.mdx",sourceDirName:"api",slug:"/api/Mixing",permalink:"/react-mixing/docs/api/Mixing",editUrl:"https://github.com/tseijp/react-mixing/edit/master/examples/docs/api/Mixing.mdx",version:"current",sidebar_label:"Mixing",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Mixing"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/react-mixing/docs/intro"},next:{title:"Props",permalink:"/react-mixing/docs/api/Props"}},l=[{value:"Overview",id:"overview",children:[]}],p={toc:l};function d(n){var e=n.components,i=(0,a.Z)(n,o);return(0,r.kt)("wrapper",(0,t.Z)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Mixing, animated } from 'react-mixing'\n\n<Mixing low={toggle ? 1 : 0}>\n  {styles => ...}\n</Mixing>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const mixingRef = new MixingRef()\n\nmixingRef.start({\n  to: {\n    opacity: 1\n  }\n})\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<Mixing ref={mixingRef} from={{ opacity: 0 }}>\n  {styles => ...}\n</MixingRef>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// This ...\n<Mixing opacity={1} color={'red'} />\n// is a shortcut for this ...\n<Mixing to={{ opacity: 1, color: 'red' }} />\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"handleAsyncTo = async (next, cancel) => {\n  await next({ opacity: 1, color: '#ffaaee' })\n  await next({ opacity: 0, color: 'rgb(14,26,19)' })\n}\n\nrender (\n  <Mixing to={handleAsyncTo} from={{ opacity: 0, color: 'red' }}>\n    {styles => (\n      <animated.div style={styles}>I will fade in and out</animated.div>\n    )}\n  </Mixing>\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"render (\n  <Mixing\n    loop\n    from={{ opacity: 0, color: 'red' }}\n    to={[\n      { opacity: 1, color: '#ffaaee' },\n      { opacity: 0, color: 'rgb(14,26,19)' },\n    ]}>\n    {styles => (\n      <animated.div style={styles}>I will fade in and out</animated.div>\n    )}\n  </Mixing>\n)\n")))}d.isMDXComponent=!0}}]);